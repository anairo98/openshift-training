// path of the template to use
def templatePath = 'wealthapp'
// name of the template that will be created
def templateName = 'wealthapp'
// NOTE, the "pipeline" directive/closure from the declarative pipeline syntax needs to include, or be nested outside,
// and "openshift" directive/closure from the OpenShift Client Plugin for Jenkins.  Otherwise, the declarative pipeline engine
// will not be fully engaged.
pipeline {
    agent {
      node {
        label 'master'
      }
    }
    options {
        // set a timeout of 20 minutes for this pipeline
        timeout(time: 20, unit: 'MINUTES')
    }

    stages {
        stage('preamble') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                            echo "Using project: ${openshift.project()}"
                        }
                    }
                }
            }
        }
        stage('cleanup') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                            echo "Delete previous deployment, including secrets and configmaps"
                            // delete everything with this template label
                            openshift.selector("all", [ app : templateName ]).delete()
                            // delete any secrets with this template label
                            if (openshift.selector("secrets", templateName).exists()) {
                                openshift.selector("secrets", templateName).delete()
                            }
                            if (openshift.selector("configmaps", templateName).exists()) {
                                openshift.selector("configmaps", templateName).delete()
                            }
                        }
                    }
                } // script
            } // steps
        } // stage
        stage('create') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                            def templateSelector = openshift.selector( "template", "wealthapp")
                            def templateExists = templateSelector.exists()
                            if (!templateExists) {
                                echo "Template wealthapp does not exist. Creating now..."
                                def template = openshift.create('https://raw.githubusercontent.com/anairo98/openshift-training/refs/heads/main/session7/wealthapp_template.yaml').object()
                                echo "Template created!"
                            } else {
                                echo "Template already exists"
                            }
                        }
                    }
                } // script
            } // steps
        } // stage
        stage('deploy') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                            def templateSelector = openshift.selector( "template", "wealthapp")
                            def template = templateSelector.object()
                            openshift.create( openshift.process( template, "-p", "NAMESPACE=${openshift.project()}" ) )
                        }
                    }
                } // script
            } // steps
        } // stage
    } // stages
} // pipeline
